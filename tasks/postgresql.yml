- name: Check if the data volume partition exists
  stat: path=/dev/xvdc1
  register: data_volume_partition

- name: Ensure the data volume partition is created
  command: bash -c 'echo -e "n \n p \n \n \n \n w \n q \n" | fdisk /dev/xvdc'
  when: not data_volume_partition.stat.exists is defined or not data_volume_partition.stat.exists

- name: Ensure the filesystem of the data volume is ext4
  filesystem: fstype=ext4 dev=/dev/xvdc1

- name: Ensure the data folder has right ownership
  file: path="/var/lib/postgresql" state=directory owner=postgres group=postgres

- name: Ensure the data folder for current version is present
  file: path="/var/lib/postgresql/{{ postgresql_version }}" state=directory

- name: Ensure the PostgreSQL data volume is mounted
  mount: src=/dev/xvdc1 name="/var/lib/postgresql/{{ postgresql_version }}" fstype=ext4 state=mounted

- name: Ensure the data folder for current version has right ownership
  file: path="/var/lib/postgresql/{{ postgresql_version }}" state=directory owner=postgres group=postgres

- name: Ensure the official PostgreSQL APT repository is present
  apt_repository: repo="deb http://apt.postgresql.org/pub/repos/apt/ {{ ec2_os_version }}-pgdg main" state=present

- name: Ensure the repository signing key is present
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

- name: Update the package list # apt-get update
  apt: update_cache=yes

- name: Ensure PostgreSQL is present
  apt: name="postgresql-{{ postgresql_version }}" state=latest

- name: Ensure the psycopg2 package is present (this will be required for Ansible PostgreSQL modules)
  apt: name=python-psycopg2 state=latest

- name: Ensure PostgreSQL contrib package is present, if requested
  apt: name="postgresql-{{ postgresql_version }}-contrib" state=latest 
  when: postgresql_contrib # because when expects variables 

- name: Ensure PostgreSQL configuration is as requested
  lineinfile:
    state: present
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    regexp: "{{ item.find }}"
    line: "{{ item.replace }}"
  with_items: postgresql_conf_statements
  register: postgresql_conf

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started  

